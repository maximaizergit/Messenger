<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <style>
      .chat-wrapper {
        border: 2px solid black;
        padding: 0 !important;
        height: 80vh;
        height: 80vh;
      }
      .chat {
        height: 75px;
      }
      .chat img {
        width: 70px;
        height: 70px;
      }
      .chat {
        border-top: 1px solid gray;
        border-bottom: 1px solid gray;
      }
      .sender-name {
        font-size: 24px;
      }
      .row {
        max-height: 90%;
      }
      .chat-container {
        max-height: 100%; /* Задайте желаемую максимальную высоту контейнера */
        overflow-y: auto; /* Включить вертикальную прокрутку, если контент превышает высоту контейнера */
      }
      .input-block {
        padding: 0 !important;
        min-height: 40px;
        max-height: 5vh;
      }
      .chat-container::-webkit-scrollbar {
        width: 8px;
      }

      .chat-container::-webkit-scrollbar-track {
        background-color: #f1f1f1;
      }

      .chat-container::-webkit-scrollbar-thumb {
        background-color: #888;
      }

      .chat-container::-webkit-scrollbar-thumb:hover {
        background-color: #555;
      }

      .message {
        display: flex;
        flex-direction: column;
        margin-bottom: 10px;
      }

      .message.left {
        align-items: flex-start;
        margin-left: 10px;
      }

      .message.right {
        align-items: flex-end;
        margin-right: 10px;
      }

      .sender {
        font-weight: bold;
      }

      .content {
        background-color: #f2f2f2;
        border-radius: 5px;
        padding: 10px;
        margin-top: 5px;
        max-width: 60%;
        min-width: 10%;
        word-wrap: break-word;
      }
      .left {
        opacity: 0;
        animation: slideInRight 0.3s ease-in-out forwards;
      }

      @keyframes slideInLeft {
        0% {
          opacity: 0;
          transform: translateX(-20px);
        }
        100% {
          opacity: 1;
          transform: translateX(0);
        }
      }
      .right {
        opacity: 0;
        animation: slideInLeft 0.3s ease-in-out forwards;
      }

      @keyframes slideInRight {
        0% {
          opacity: 0;
          transform: translateX(20px);
        }
        100% {
          opacity: 1;
          transform: translateX(0);
        }
      }

      @media screen and (max-width: 1150px) {
        .side-block {
          display: none;
        }
      }
    </style>
  </head>

  <body>
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
    />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <nav class="navbar navbar-expand-lg navbar-light bg-light align-top">
      <a class="navbar-brand" href="#">Dialogues</a>
      <button
        class="navbar-toggler"
        type="button"
        data-toggle="collapse"
        data-target="#navbarNav"
        aria-controls="navbarNav"
        aria-expanded="false"
        aria-label="Toggle navigation"
      >
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" href="#">Сообщения</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Друзья</a>
          </li>
        </ul>
      </div>
    </nav>

    <div class="container-fluid">
      <div class="row">
        <div class="col-md-2 side-block">
          <!-- Пустая колонка -->
        </div>
        <div class="col-md-2 side-block">
          <!-- Колонка с меню -->
          <div class="list-group">
            <a href="/" class="list-group-item list-group-item-action active"
              >Сообщения</a
            >
            <a href="/friends" class="list-group-item list-group-item-action"
              >Друзья</a
            >
            <!-- Добавьте дополнительные ссылки в меню, если необходимо -->
          </div>
        </div>
        <div class="col-md-5 chat-wrapper">
          <!-- Колонка с контейнером для чатов -->
          <div class="chat-container" id="chat-container">
            <% messages.forEach(function(message) { %>
            <div
              class="message <%= message.senderId.toString() === userId ? 'right' : 'left' %>"
            >
              <div class="content">
                <div class="sender"><%= message.senderName %></div>
                <%= message.text %>
              </div>
            </div>
            <% }); %>
          </div>
        </div>
        <div class="col-md-3 side-block">
          <!-- Пустая колонка -->
        </div>
      </div>
      <div class="row">
        <div class="col-md-4 side-block">
          <!-- Пустая колонка -->
        </div>
        <div class="col-md-5 input-block">
          <div class="message-input d-flex align-items-center">
            <input
              id="message-input"
              type="text"
              class="form-control mr-2"
              placeholder="Введите сообщение"
            />
            <button id="send-button" class="btn btn-primary">Отправить</button>
            <input type="hidden" id="current-user-id" value="<%= userId %>" />
            <input
              type="hidden"
              id="current-user-name"
              value="<%= userName %>"
            />
          </div>
        </div>
        <div class="col-md-3 side-block">
          <!-- Пустая колонка -->
        </div>
      </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      $(document).ready(function () {
        // Обработка клика на кнопку "Отправить"
        $("#send-button").click(function () {
          // Получение введенного сообщения из инпута
          let message = $("#message-input").val();

          // Отправка сообщения на сервер или выполнение необходимых действий
          sendMessage(message, userId);

          // Очистка инпута после отправки сообщения
          $("#message-input").val("");
        });
      });
      // Подключение к серверу Socket.IO
      const socket = io();
      var userId = $("#current-user-id").val();

      var userName = $("#current-user-name").val();
      var chatId = window.location.pathname.split("/chat/")[1];
      // Отправка сообщения
      function sendMessage(message) {
        socket.emit("chatMessage", { chatId, message, userId, userName });
      }

      // Обработка получения нового сообщения
      socket.on("message", (message) => {
        // Создание контейнера сообщения
        const messageContainer = document.createElement("div");
        messageContainer.classList.add("message");
        console.log(message);
        messageContainer.classList.add(
          message.userId === userId ? "right" : "left"
        );
        console.log(userId + "///" + message.userId);
        // Создание блока облачка с именем отправителя
        const senderContainer = document.createElement("div");
        senderContainer.classList.add("sender");
        senderContainer.textContent = message.userName;

        // Создание блока облачка с содержимым сообщения
        const contentContainer = document.createElement("div");
        const text = document.createElement("div");
        text.textContent = message.message;
        contentContainer.classList.add("content");
        contentContainer.appendChild(senderContainer);
        contentContainer.appendChild(text);

        // Добавление блоков облачков в контейнер сообщения

        messageContainer.appendChild(contentContainer);

        // Поиск контейнера чата по его идентификатору
        const chatContainer = document.getElementById("chat-container");

        // Добавление контейнера сообщения в контейнер чата
        chatContainer.appendChild(messageContainer);

        // Прокрутка контейнера чата вниз
        chatContainer.scrollTop = chatContainer.scrollHeight;
        console.log("New message:", message);
      });
      socket.on("connect", () => {
        console.log("Установлено соединение с сервером");

        socket.emit("joinRoom", chatId);
      });

      const chatContainer = document.getElementById("chat-container");

      // Пролистывание содержимого вниз
      chatContainer.scrollTop = chatContainer.scrollHeight;

      const chatWrapper = document.querySelector(".chat-wrapper");
      const mediaQuery = window.matchMedia("(max-width: 1150px)");
      const inputBlock = document.querySelector(".input-block");
      function handleMediaQuery(event) {
        if (event.matches) {
          chatWrapper.classList.remove("col-md-5");
          chatWrapper.classList.add("col-md-12");
          inputBlock.classList.remove("col-md-5");
          inputBlock.classList.add("col-md-12");
        } else {
          chatWrapper.classList.remove("col-md-12");
          chatWrapper.classList.add("col-md-5");
          inputBlock.classList.remove("col-md-12");
          inputBlock.classList.add("col-md-5");
        }
      }
      mediaQuery.addEventListener("change", handleMediaQuery);
      handleMediaQuery(mediaQuery);
    </script>
  </body>
</html>
